version: '3.8'

services:
  backend:
    image: 183631324733.dkr.ecr.eu-central-1.amazonaws.com/rds-backend:latest
    container_name: backend
    restart: always
    environment:
      DB_NAME: base
      DB_USER: morty
      DB_PASSWORD: 123456
      DB_HOST: postgres
      DB_PORT: 5432
      REDIS_HOST: my-redis-cluster.inbeqa.ng.0001.euc1.cache.amazonaws.com
      REDIS_PORT: 6379
      ALLOWED_HOSTS: "localhost,127.0.0.1,0.0.0.0,mortybooksdomain.click"
      CORS_ALLOWED_ORIGINS: "https://mortybooksdomain.click,https://d3fhgk6ddd4x41.cloudfront.net"
    ports:
      - "8000:8000"
    depends_on:
      - postgres

  backend_redis:
    image: 183631324733.dkr.ecr.eu-central-1.amazonaws.com/redis-backend:latest
    container_name: backend_redis
    restart: always
    environment:
      REDIS_HOST: my-redis-cluster.inbeqa.ng.0001.euc1.cache.amazonaws.com
      REDIS_PORT: 6379
      ALLOWED_HOSTS: "localhost,127.0.0.1,0.0.0.0,mortybooksdomain.click"
      CORS_ALLOWED_ORIGINS: "https://mortybooksdomain.click,https://d3fhgk6ddd4x41.cloudfront.net"
    ports:
      - "8001:8000"

  postgres:
    image: postgres:latest
    container_name: postgres
    restart: always
    volumes:
      - pgdata:/var/lib/postgresql/data
    environment:
      POSTGRES_USER: morty
      POSTGRES_PASSWORD: 123456
      POSTGRES_DB: base
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U morty"]
      interval: 10s
      timeout: 5s
      retries: 5

volumes:
  pgdata:

